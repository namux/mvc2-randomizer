{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namyd\\\\mvc2-randomizer\\\\src\\\\components\\\\TeamGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { characters, getRandomCharacter } from '../data/characters';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamGenerator = () => {\n  _s();\n  const defaultTeam = [characters.find(char => char.name === 'Magneto'), characters.find(char => char.name === 'Storm'), characters.find(char => char.name === 'Psylocke')];\n  const [team, setTeam] = useState(defaultTeam);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const generateTeam = () => {\n    setIsGenerating(true);\n\n    // Start cycling all characters\n    setTimeout(() => {\n      const newTeam = [];\n      for (let i = 0; i < 3; i++) {\n        const char = getRandomCharacter(newTeam.map(c => c.name));\n        newTeam.push(char);\n      }\n      setTeam(newTeam);\n      setIsGenerating(false);\n    }, 2000); // Animation duration\n  };\n  const renderCharacterSlot = index => {\n    const char = team[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `character-card ${isGenerating ? 'spinning' : ''}`,\n      children: isGenerating ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characters[Math.floor(Math.random() * characters.length)].image,\n        alt: \"Spinning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: char.image,\n          alt: char.name,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/images/characters/default.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    if (isGenerating) {\n      const interval = setInterval(() => {\n        setTeam(prev => prev.map(() => characters[Math.floor(Math.random() * characters.length)]));\n      }, 50);\n      return () => clearInterval(interval);\n    }\n  }, [isGenerating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Team Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-display-large\",\n      children: [0, 1, 2].map(renderCharacterSlot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-generator-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateTeam,\n        disabled: isGenerating,\n        className: `team-generator-button ${isGenerating ? 'generating' : ''}`,\n        children: isGenerating ? 'Generating...' : 'Generate Team'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamGenerator, \"bfnask7nWXURtC5CprKt9ej1ie8=\");\n_c = TeamGenerator;\nexport default TeamGenerator;\nvar _c;\n$RefreshReg$(_c, \"TeamGenerator\");","map":{"version":3,"names":["React","useState","useEffect","characters","getRandomCharacter","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamGenerator","_s","defaultTeam","find","char","name","team","setTeam","isGenerating","setIsGenerating","generateTeam","setTimeout","newTeam","i","map","c","push","renderCharacterSlot","index","className","children","src","Math","floor","random","length","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","onError","e","target","onerror","interval","setInterval","prev","clearInterval","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/namyd/mvc2-randomizer/src/components/TeamGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { characters, getRandomCharacter } from '../data/characters';\r\n\r\nconst TeamGenerator = () => {\r\n  const defaultTeam = [\r\n    characters.find(char => char.name === 'Magneto'),\r\n    characters.find(char => char.name === 'Storm'),\r\n    characters.find(char => char.name === 'Psylocke')\r\n  ];\r\n\r\n  const [team, setTeam] = useState(defaultTeam);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n\r\n  const generateTeam = () => {\r\n    setIsGenerating(true);\r\n\r\n    // Start cycling all characters\r\n    setTimeout(() => {\r\n      const newTeam = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        const char = getRandomCharacter(newTeam.map(c => c.name));\r\n        newTeam.push(char);\r\n      }\r\n      setTeam(newTeam);\r\n      setIsGenerating(false);\r\n    }, 2000); // Animation duration\r\n  };\r\n\r\n  const renderCharacterSlot = (index) => {\r\n    const char = team[index];\r\n    return (\r\n      <div key={index} className={`character-card ${isGenerating ? 'spinning' : ''}`}>\r\n        {isGenerating ? (\r\n          <img \r\n            src={characters[Math.floor(Math.random() * characters.length)].image} \r\n            alt=\"Spinning\" \r\n          />\r\n        ) : (\r\n          <>\r\n            <img \r\n              src={char.image} \r\n              alt={char.name} \r\n              onError={(e) => { e.target.onerror = null; e.target.src = '/images/characters/default.png' }} \r\n            />\r\n            <p>{char.name}</p>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isGenerating) {\r\n      const interval = setInterval(() => {\r\n        setTeam(prev => prev.map(() => characters[Math.floor(Math.random() * characters.length)]));\r\n      }, 50);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isGenerating]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Random Team Generator</h2>\r\n      <div className=\"team-display-large\">\r\n        {[0, 1, 2].map(renderCharacterSlot)}\r\n      </div>\r\n      <div className=\"team-generator-button-container\">\r\n        <button \r\n          onClick={generateTeam} \r\n          disabled={isGenerating}\r\n          className={`team-generator-button ${isGenerating ? 'generating' : ''}`}\r\n        >\r\n          {isGenerating ? 'Generating...' : 'Generate Team'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}