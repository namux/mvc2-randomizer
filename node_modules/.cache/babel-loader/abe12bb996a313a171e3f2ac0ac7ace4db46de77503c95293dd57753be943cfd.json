{"ast":null,"code":"var _jsxFileName = \"/Users/namux/mvc2-randomizer/src/components/TeamGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { characters, getRandomCharacter } from '../data/characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamGenerator = () => {\n  _s();\n  const [team, setTeam] = useState([null, null, null]);\n  const [isSpinning, setIsSpinning] = useState([false, false, false]);\n  const [isChosen, setIsChosen] = useState([false, false, false]);\n  const generateTeam = () => {\n    setIsSpinning([true, false, false]);\n    setIsChosen([false, false, false]);\n    setTeam([null, null, null]);\n    const selectCharacter = index => {\n      setTimeout(() => {\n        setTeam(prevTeam => {\n          const newTeam = [...prevTeam];\n          newTeam[index] = getRandomCharacter(newTeam.filter(Boolean).map(c => c.name));\n          return newTeam;\n        });\n        setIsSpinning(prev => {\n          const next = [...prev];\n          next[index] = false;\n          if (index < 2) next[index + 1] = true;\n          return next;\n        });\n        setIsChosen(prev => {\n          const next = [...prev];\n          next[index] = true;\n          return next;\n        });\n        if (index < 2) {\n          selectCharacter(index + 1);\n        }\n      }, 1000);\n    };\n    selectCharacter(0);\n  };\n  const renderCharacterSlot = index => {\n    const char = team[index];\n    if (isSpinning[index]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-card spinning\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: characters[Math.floor(Math.random() * characters.length)].image,\n          alt: \"Spinning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, `slot-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    } else if (char) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `character-card ${isChosen[index] ? 'chosen' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: char.image,\n          alt: char.name,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/images/characters/default.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, char.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/characters/slot-${index + 1}.png`,\n          alt: `Empty Slot ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, `slot-${index + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const intervals = isSpinning.map((spinning, index) => {\n      if (spinning) {\n        return setInterval(() => {\n          setTeam(prev => {\n            const newTeam = [...prev];\n            newTeam[index] = characters[Math.floor(Math.random() * characters.length)];\n            return newTeam;\n          });\n        }, 50); // Changed from 25 to 50 for slower spinning\n      }\n      return null;\n    });\n    return () => intervals.forEach(interval => interval && clearInterval(interval));\n  }, [isSpinning]);\n  const isGenerating = isSpinning.some(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MvC2 Team Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-display-large\",\n      children: [0, 1, 2].map(renderCharacterSlot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTeam,\n      disabled: isGenerating,\n      className: `team-generator-button ${isGenerating ? 'generating' : ''}`,\n      children: isGenerating ? 'Generating...' : 'Generate Team'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamGenerator, \"Kf6SD8rRBu/jXZqSIPxCCgZnaHE=\");\n_c = TeamGenerator;\nexport default TeamGenerator;\nvar _c;\n$RefreshReg$(_c, \"TeamGenerator\");","map":{"version":3,"names":["React","useState","useEffect","characters","getRandomCharacter","jsxDEV","_jsxDEV","TeamGenerator","_s","team","setTeam","isSpinning","setIsSpinning","isChosen","setIsChosen","generateTeam","selectCharacter","index","setTimeout","prevTeam","newTeam","filter","Boolean","map","c","name","prev","next","renderCharacterSlot","char","className","children","src","Math","floor","random","length","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","onError","e","target","onerror","intervals","spinning","setInterval","forEach","interval","clearInterval","isGenerating","some","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/namux/mvc2-randomizer/src/components/TeamGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { characters, getRandomCharacter } from '../data/characters';\n\nconst TeamGenerator = () => {\n  const [team, setTeam] = useState([null, null, null]);\n  const [isSpinning, setIsSpinning] = useState([false, false, false]);\n  const [isChosen, setIsChosen] = useState([false, false, false]);\n\n  const generateTeam = () => {\n    setIsSpinning([true, false, false]);\n    setIsChosen([false, false, false]);\n    setTeam([null, null, null]);\n\n    const selectCharacter = (index) => {\n      setTimeout(() => {\n        setTeam(prevTeam => {\n          const newTeam = [...prevTeam];\n          newTeam[index] = getRandomCharacter(newTeam.filter(Boolean).map(c => c.name));\n          return newTeam;\n        });\n        setIsSpinning(prev => {\n          const next = [...prev];\n          next[index] = false;\n          if (index < 2) next[index + 1] = true;\n          return next;\n        });\n        setIsChosen(prev => {\n          const next = [...prev];\n          next[index] = true;\n          return next;\n        });\n\n        if (index < 2) {\n          selectCharacter(index + 1);\n        }\n      }, 1000);\n    };\n\n    selectCharacter(0);\n  };\n\n  const renderCharacterSlot = (index) => {\n    const char = team[index];\n    if (isSpinning[index]) {\n      return (\n        <div key={`slot-${index}`} className=\"character-card spinning\">\n          <img src={characters[Math.floor(Math.random() * characters.length)].image} alt=\"Spinning\" />\n        </div>\n      );\n    } else if (char) {\n      return (\n        <div key={char.name} className={`character-card ${isChosen[index] ? 'chosen' : ''}`}>\n          <img src={char.image} alt={char.name} onError={(e) => { e.target.onerror = null; e.target.src = '/images/characters/default.png' }} />\n          <p>{char.name}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div key={`slot-${index + 1}`} className=\"character-card\">\n          <img src={`/images/characters/slot-${index + 1}.png`} alt={`Empty Slot ${index + 1}`} />\n          <p>Empty Slot</p>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    const intervals = isSpinning.map((spinning, index) => {\n      if (spinning) {\n        return setInterval(() => {\n          setTeam(prev => {\n            const newTeam = [...prev];\n            newTeam[index] = characters[Math.floor(Math.random() * characters.length)];\n            return newTeam;\n          });\n        }, 50); // Changed from 25 to 50 for slower spinning\n      }\n      return null;\n    });\n\n    return () => intervals.forEach(interval => interval && clearInterval(interval));\n  }, [isSpinning]);\n\n  const isGenerating = isSpinning.some(Boolean);\n\n  return (\n    <div>\n      <h2>MvC2 Team Generator</h2>\n      <div className=\"team-display-large\">\n        {[0, 1, 2].map(renderCharacterSlot)}\n      </div>\n      <button \n        onClick={generateTeam} \n        disabled={isGenerating}\n        className={`team-generator-button ${isGenerating ? 'generating' : ''}`}\n      >\n        {isGenerating ? 'Generating...' : 'Generate Team'}\n      </button>\n    </div>\n  );\n};\n\nexport default TeamGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}