{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namyd\\\\mvc2-randomizer\\\\src\\\\components\\\\TeamGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { characters, getRandomCharacter } from '../data/characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamGenerator = () => {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [isSpinning, setIsSpinning] = useState([false, false, false]);\n  const [isChosen, setIsChosen] = useState([false, false, false]);\n  const generateTeam = () => {\n    setIsSpinning([true, false, false]);\n    setIsChosen([false, false, false]);\n    setTeam([]);\n    const selectCharacter = index => {\n      setTimeout(() => {\n        const newTeam = [...team];\n        newTeam[index] = getRandomCharacter(newTeam.map(c => c === null || c === void 0 ? void 0 : c.name));\n        setTeam(newTeam);\n        setIsSpinning(prev => {\n          const next = [...prev];\n          next[index] = false;\n          next[index + 1] = index < 2;\n          return next;\n        });\n        setIsChosen(prev => {\n          const next = [...prev];\n          next[index] = true;\n          return next;\n        });\n        if (index < 2) {\n          selectCharacter(index + 1);\n        }\n      }, 1000);\n    };\n    selectCharacter(0);\n  };\n  const renderCharacterSlot = index => {\n    const char = team[index];\n    if (isSpinning[index]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-card spinning\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: characters[Math.floor(Math.random() * characters.length)].image,\n          alt: \"Spinning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, `slot-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    } else if (char) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `character-card ${isChosen[index] ? 'chosen' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: char.image,\n          alt: char.name,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/images/characters/default.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, char.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/characters/slot-${index + 1}.png`,\n          alt: `Empty Slot ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, `slot-${index + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const intervals = isSpinning.map((spinning, index) => {\n      if (spinning) {\n        return setInterval(() => {\n          setTeam(prev => {\n            const newTeam = [...prev];\n            newTeam[index] = characters[Math.floor(Math.random() * characters.length)];\n            return newTeam;\n          });\n        }, 75); // Changed from 50 to 25 for faster spinning\n      }\n      return null;\n    });\n    return () => intervals.forEach(interval => interval && clearInterval(interval));\n  }, [isSpinning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Team Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-display\",\n      children: [0, 1, 2].map(renderCharacterSlot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTeam,\n      disabled: isSpinning.some(Boolean),\n      children: isSpinning.some(Boolean) ? 'Generating...' : 'Generate Team'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamGenerator, \"rjg7OMt4w07HDsPW0tkWGToadLA=\");\n_c = TeamGenerator;\nexport default TeamGenerator;\nvar _c;\n$RefreshReg$(_c, \"TeamGenerator\");","map":{"version":3,"names":["React","useState","useEffect","characters","getRandomCharacter","jsxDEV","_jsxDEV","TeamGenerator","_s","team","setTeam","isSpinning","setIsSpinning","isChosen","setIsChosen","generateTeam","selectCharacter","index","setTimeout","newTeam","map","c","name","prev","next","renderCharacterSlot","char","className","children","src","Math","floor","random","length","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","onError","e","target","onerror","intervals","spinning","setInterval","forEach","interval","clearInterval","onClick","disabled","some","Boolean","_c","$RefreshReg$"],"sources":["C:/Users/namyd/mvc2-randomizer/src/components/TeamGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { characters, getRandomCharacter } from '../data/characters';\r\n\r\nconst TeamGenerator = () => {\r\n  const [team, setTeam] = useState([]);\r\n  const [isSpinning, setIsSpinning] = useState([false, false, false]);\r\n  const [isChosen, setIsChosen] = useState([false, false, false]);\r\n\r\n  const generateTeam = () => {\r\n    setIsSpinning([true, false, false]);\r\n    setIsChosen([false, false, false]);\r\n    setTeam([]);\r\n\r\n    const selectCharacter = (index) => {\r\n      setTimeout(() => {\r\n        const newTeam = [...team];\r\n        newTeam[index] = getRandomCharacter(newTeam.map(c => c?.name));\r\n        setTeam(newTeam);\r\n        setIsSpinning(prev => {\r\n          const next = [...prev];\r\n          next[index] = false;\r\n          next[index + 1] = index < 2;\r\n          return next;\r\n        });\r\n        setIsChosen(prev => {\r\n          const next = [...prev];\r\n          next[index] = true;\r\n          return next;\r\n        });\r\n\r\n        if (index < 2) {\r\n          selectCharacter(index + 1);\r\n        }\r\n      }, 1000);\r\n    };\r\n\r\n    selectCharacter(0);\r\n  };\r\n\r\n  const renderCharacterSlot = (index) => {\r\n    const char = team[index];\r\n    if (isSpinning[index]) {\r\n      return (\r\n        <div key={`slot-${index}`} className=\"character-card spinning\">\r\n          <img src={characters[Math.floor(Math.random() * characters.length)].image} alt=\"Spinning\" />\r\n        </div>\r\n      );\r\n    } else if (char) {\r\n      return (\r\n        <div key={char.name} className={`character-card ${isChosen[index] ? 'chosen' : ''}`}>\r\n          <img src={char.image} alt={char.name} onError={(e) => { e.target.onerror = null; e.target.src = '/images/characters/default.png' }} />\r\n          <p>{char.name}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div key={`slot-${index + 1}`} className=\"character-card\">\r\n          <img src={`/images/characters/slot-${index + 1}.png`} alt={`Empty Slot ${index + 1}`} />\r\n          <p>Empty Slot</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervals = isSpinning.map((spinning, index) => {\r\n      if (spinning) {\r\n        return setInterval(() => {\r\n          setTeam(prev => {\r\n            const newTeam = [...prev];\r\n            newTeam[index] = characters[Math.floor(Math.random() * characters.length)];\r\n            return newTeam;\r\n          });\r\n        },75); // Changed from 50 to 25 for faster spinning\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return () => intervals.forEach(interval => interval && clearInterval(interval));\r\n  }, [isSpinning]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Random Team Generator</h2>\r\n      <div className=\"team-display\">\r\n        {[0, 1, 2].map(renderCharacterSlot)}\r\n      </div>\r\n      <button onClick={generateTeam} disabled={isSpinning.some(Boolean)}>\r\n        {isSpinning.some(Boolean) ? 'Generating...' : 'Generate Team'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}