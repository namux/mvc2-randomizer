{"ast":null,"code":"// This file contains the character data\nexport const characters = [\n// 5 points\n{\n  name: 'Cable',\n  ratio: 5\n}, {\n  name: 'Iron Man',\n  ratio: 5\n}, {\n  name: 'Magneto',\n  ratio: 5\n}, {\n  name: 'Sentinel',\n  ratio: 5\n}, {\n  name: 'Storm',\n  ratio: 5\n}, {\n  name: 'Doctor Doom',\n  ratio: 5\n},\n// 4 points\n{\n  name: 'Blackheart',\n  ratio: 4\n}, {\n  name: 'Cammy',\n  ratio: 4\n}, {\n  name: 'Captain Commando',\n  ratio: 4\n}, {\n  name: 'Cyclops',\n  ratio: 4\n}, {\n  name: 'Dhalsim',\n  ratio: 4\n}, {\n  name: 'Psylocke',\n  ratio: 4\n}, {\n  name: 'Ruby Heart',\n  ratio: 4\n}, {\n  name: 'Spiral',\n  ratio: 4\n}, {\n  name: 'Strider',\n  ratio: 4\n}, {\n  name: 'Tron Bonne',\n  ratio: 4\n}, {\n  name: 'War Machine',\n  ratio: 4\n},\n// 3 points\n{\n  name: 'Anakaris',\n  ratio: 3\n}, {\n  name: 'B.B. Hood',\n  ratio: 3\n}, {\n  name: 'Charlie',\n  ratio: 3\n}, {\n  name: 'Colossus',\n  ratio: 3\n}, {\n  name: 'Gambit',\n  ratio: 3\n}, {\n  name: 'Guile',\n  ratio: 3\n}, {\n  name: 'Hulk',\n  ratio: 3\n}, {\n  name: 'Iceman',\n  ratio: 3\n}, {\n  name: 'Jill',\n  ratio: 3\n}, {\n  name: 'Jin',\n  ratio: 3\n}, {\n  name: 'Mega Man',\n  ratio: 3\n}, {\n  name: 'Omega Red',\n  ratio: 3\n}, {\n  name: 'Rogue',\n  ratio: 3\n}, {\n  name: 'Silver Samurai',\n  ratio: 3\n}, {\n  name: 'Spider-Man',\n  ratio: 3\n},\n// 2 points\n{\n  name: 'Akuma',\n  ratio: 2\n}, {\n  name: 'Captain America',\n  ratio: 2\n}, {\n  name: 'Felicia',\n  ratio: 2\n}, {\n  name: 'Juggernaut',\n  ratio: 2\n}, {\n  name: 'Ken',\n  ratio: 2\n}, {\n  name: 'M. Bison',\n  ratio: 2\n}, {\n  name: 'Sabretooth',\n  ratio: 2\n}, {\n  name: 'Sakura',\n  ratio: 2\n}, {\n  name: 'SonSon',\n  ratio: 2\n}, {\n  name: 'Wolverine (Adamantium)',\n  ratio: 2\n},\n// 1 point\n{\n  name: 'Hayato',\n  ratio: 1\n}, {\n  name: 'Marrow',\n  ratio: 1\n}, {\n  name: 'Morrigan',\n  ratio: 1\n}, {\n  name: 'Ryu',\n  ratio: 1\n}, {\n  name: 'Shuma-Gorath',\n  ratio: 1\n}, {\n  name: 'Thanos',\n  ratio: 1\n}, {\n  name: 'Venom',\n  ratio: 1\n}, {\n  name: 'Zangief',\n  ratio: 1\n},\n// 0 points\n{\n  name: 'Amingo',\n  ratio: 0\n}, {\n  name: 'Chun-Li',\n  ratio: 0\n}, {\n  name: 'Dan',\n  ratio: 0\n}, {\n  name: 'Wolverine (Bone)',\n  ratio: 0\n},\n// -1 point\n{\n  name: 'Roll',\n  ratio: -1\n}, {\n  name: 'Servbot',\n  ratio: -1\n}];\nexport const getRandomCharacter = (excludeList = [], availableCharacters = characters) => {\n  const filteredCharacters = availableCharacters.filter(char => !excludeList.includes(char.name));\n  return filteredCharacters[Math.floor(Math.random() * filteredCharacters.length)];\n};\nexport const getCharactersByRatio = ratio => {\n  return characters.filter(char => char.ratio === ratio);\n};","map":{"version":3,"names":["characters","name","ratio","getRandomCharacter","excludeList","availableCharacters","filteredCharacters","filter","char","includes","Math","floor","random","length","getCharactersByRatio"],"sources":["/Users/namux/mvc2-randomizer/src/data/characters.js"],"sourcesContent":["// This file contains the character data\nexport const characters = [\n  // 5 points\n  { name: 'Cable', ratio: 5 },\n  { name: 'Iron Man', ratio: 5 },\n  { name: 'Magneto', ratio: 5 },\n  { name: 'Sentinel', ratio: 5 },\n  { name: 'Storm', ratio: 5 },\n  { name: 'Doctor Doom', ratio: 5 },\n  \n  // 4 points\n  { name: 'Blackheart', ratio: 4 },\n  { name: 'Cammy', ratio: 4 },\n  { name: 'Captain Commando', ratio: 4 },\n  { name: 'Cyclops', ratio: 4 },\n  { name: 'Dhalsim', ratio: 4 },\n  { name: 'Psylocke', ratio: 4 },\n  { name: 'Ruby Heart', ratio: 4 },\n  { name: 'Spiral', ratio: 4 },\n  { name: 'Strider', ratio: 4 },\n  { name: 'Tron Bonne', ratio: 4 },\n  { name: 'War Machine', ratio: 4 },\n  \n  // 3 points\n  { name: 'Anakaris', ratio: 3 },\n  { name: 'B.B. Hood', ratio: 3 },\n  { name: 'Charlie', ratio: 3 },\n  { name: 'Colossus', ratio: 3 },\n  { name: 'Gambit', ratio: 3 },\n  { name: 'Guile', ratio: 3 },\n  { name: 'Hulk', ratio: 3 },\n  { name: 'Iceman', ratio: 3 },\n  { name: 'Jill', ratio: 3 },\n  { name: 'Jin', ratio: 3 },\n  { name: 'Mega Man', ratio: 3 },\n  { name: 'Omega Red', ratio: 3 },\n  { name: 'Rogue', ratio: 3 },\n  { name: 'Silver Samurai', ratio: 3 },\n  { name: 'Spider-Man', ratio: 3 },\n  \n  // 2 points\n  { name: 'Akuma', ratio: 2 },\n  { name: 'Captain America', ratio: 2 },\n  { name: 'Felicia', ratio: 2 },\n  { name: 'Juggernaut', ratio: 2 },\n  { name: 'Ken', ratio: 2 },\n  { name: 'M. Bison', ratio: 2 },\n  { name: 'Sabretooth', ratio: 2 },\n  { name: 'Sakura', ratio: 2 },\n  { name: 'SonSon', ratio: 2 },\n  { name: 'Wolverine (Adamantium)', ratio: 2 },\n  \n  // 1 point\n  { name: 'Hayato', ratio: 1 },\n  { name: 'Marrow', ratio: 1 },\n  { name: 'Morrigan', ratio: 1 },\n  { name: 'Ryu', ratio: 1 },\n  { name: 'Shuma-Gorath', ratio: 1 },\n  { name: 'Thanos', ratio: 1 },\n  { name: 'Venom', ratio: 1 },\n  { name: 'Zangief', ratio: 1 },\n  \n  // 0 points\n  { name: 'Amingo', ratio: 0 },\n  { name: 'Chun-Li', ratio: 0 },\n  { name: 'Dan', ratio: 0 },\n  { name: 'Wolverine (Bone)', ratio: 0 },\n  \n  // -1 point\n  { name: 'Roll', ratio: -1 },\n  { name: 'Servbot', ratio: -1 },\n];\n\nexport const getRandomCharacter = (excludeList = [], availableCharacters = characters) => {\n  const filteredCharacters = availableCharacters.filter(char => !excludeList.includes(char.name));\n  return filteredCharacters[Math.floor(Math.random() * filteredCharacters.length)];\n};\n\nexport const getCharactersByRatio = (ratio) => {\n  return characters.filter(char => char.ratio === ratio);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}